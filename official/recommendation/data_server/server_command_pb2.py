# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: official/recommendation/data_server/server_command.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='official/recommendation/data_server/server_command.proto',
  package='official.recommendation.data_server',
  syntax='proto3',
  serialized_pb=_b('\n8official/recommendation/data_server/server_command.proto\x12#official.recommendation.data_server\"\x07\n\x05\x43heck\"7\n\tNumEpochs\x12\r\n\x05value\x18\x01 \x01(\x05\x12\x1b\n\x13shuffle_buffer_size\x18\x02 \x01(\x03\"7\n\x0c\x42\x61tchRequest\x12\x0f\n\x07shuffle\x18\x01 \x01(\x08\x12\x16\n\x0emax_batch_size\x18\x02 \x01(\x05\"5\n\x05\x42\x61tch\x12\r\n\x05users\x18\x01 \x01(\x0c\x12\r\n\x05items\x18\x02 \x01(\x0c\x12\x0e\n\x06labels\x18\x03 \x01(\x0c\"\n\n\x08Shutdown\"\x16\n\x03\x41\x63k\x12\x0f\n\x07success\x18\x01 \x01(\x08\x32\xa5\x03\n\tTrainData\x12]\n\x05\x41live\x12*.official.recommendation.data_server.Check\x1a(.official.recommendation.data_server.Ack\x12\x63\n\x07\x45nqueue\x12..official.recommendation.data_server.NumEpochs\x1a(.official.recommendation.data_server.Ack\x12i\n\x08GetBatch\x12\x31.official.recommendation.data_server.BatchRequest\x1a*.official.recommendation.data_server.Batch\x12i\n\x0eShutdownServer\x12-.official.recommendation.data_server.Shutdown\x1a(.official.recommendation.data_server.Ackb\x06proto3')
)




_CHECK = _descriptor.Descriptor(
  name='Check',
  full_name='official.recommendation.data_server.Check',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=97,
  serialized_end=104,
)


_NUMEPOCHS = _descriptor.Descriptor(
  name='NumEpochs',
  full_name='official.recommendation.data_server.NumEpochs',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='official.recommendation.data_server.NumEpochs.value', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='shuffle_buffer_size', full_name='official.recommendation.data_server.NumEpochs.shuffle_buffer_size', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=106,
  serialized_end=161,
)


_BATCHREQUEST = _descriptor.Descriptor(
  name='BatchRequest',
  full_name='official.recommendation.data_server.BatchRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='shuffle', full_name='official.recommendation.data_server.BatchRequest.shuffle', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='max_batch_size', full_name='official.recommendation.data_server.BatchRequest.max_batch_size', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=163,
  serialized_end=218,
)


_BATCH = _descriptor.Descriptor(
  name='Batch',
  full_name='official.recommendation.data_server.Batch',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='users', full_name='official.recommendation.data_server.Batch.users', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='items', full_name='official.recommendation.data_server.Batch.items', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='labels', full_name='official.recommendation.data_server.Batch.labels', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=220,
  serialized_end=273,
)


_SHUTDOWN = _descriptor.Descriptor(
  name='Shutdown',
  full_name='official.recommendation.data_server.Shutdown',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=275,
  serialized_end=285,
)


_ACK = _descriptor.Descriptor(
  name='Ack',
  full_name='official.recommendation.data_server.Ack',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='success', full_name='official.recommendation.data_server.Ack.success', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=287,
  serialized_end=309,
)

DESCRIPTOR.message_types_by_name['Check'] = _CHECK
DESCRIPTOR.message_types_by_name['NumEpochs'] = _NUMEPOCHS
DESCRIPTOR.message_types_by_name['BatchRequest'] = _BATCHREQUEST
DESCRIPTOR.message_types_by_name['Batch'] = _BATCH
DESCRIPTOR.message_types_by_name['Shutdown'] = _SHUTDOWN
DESCRIPTOR.message_types_by_name['Ack'] = _ACK
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Check = _reflection.GeneratedProtocolMessageType('Check', (_message.Message,), dict(
  DESCRIPTOR = _CHECK,
  __module__ = 'official.recommendation.data_server.server_command_pb2'
  # @@protoc_insertion_point(class_scope:official.recommendation.data_server.Check)
  ))
_sym_db.RegisterMessage(Check)

NumEpochs = _reflection.GeneratedProtocolMessageType('NumEpochs', (_message.Message,), dict(
  DESCRIPTOR = _NUMEPOCHS,
  __module__ = 'official.recommendation.data_server.server_command_pb2'
  # @@protoc_insertion_point(class_scope:official.recommendation.data_server.NumEpochs)
  ))
_sym_db.RegisterMessage(NumEpochs)

BatchRequest = _reflection.GeneratedProtocolMessageType('BatchRequest', (_message.Message,), dict(
  DESCRIPTOR = _BATCHREQUEST,
  __module__ = 'official.recommendation.data_server.server_command_pb2'
  # @@protoc_insertion_point(class_scope:official.recommendation.data_server.BatchRequest)
  ))
_sym_db.RegisterMessage(BatchRequest)

Batch = _reflection.GeneratedProtocolMessageType('Batch', (_message.Message,), dict(
  DESCRIPTOR = _BATCH,
  __module__ = 'official.recommendation.data_server.server_command_pb2'
  # @@protoc_insertion_point(class_scope:official.recommendation.data_server.Batch)
  ))
_sym_db.RegisterMessage(Batch)

Shutdown = _reflection.GeneratedProtocolMessageType('Shutdown', (_message.Message,), dict(
  DESCRIPTOR = _SHUTDOWN,
  __module__ = 'official.recommendation.data_server.server_command_pb2'
  # @@protoc_insertion_point(class_scope:official.recommendation.data_server.Shutdown)
  ))
_sym_db.RegisterMessage(Shutdown)

Ack = _reflection.GeneratedProtocolMessageType('Ack', (_message.Message,), dict(
  DESCRIPTOR = _ACK,
  __module__ = 'official.recommendation.data_server.server_command_pb2'
  # @@protoc_insertion_point(class_scope:official.recommendation.data_server.Ack)
  ))
_sym_db.RegisterMessage(Ack)



_TRAINDATA = _descriptor.ServiceDescriptor(
  name='TrainData',
  full_name='official.recommendation.data_server.TrainData',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=312,
  serialized_end=733,
  methods=[
  _descriptor.MethodDescriptor(
    name='Alive',
    full_name='official.recommendation.data_server.TrainData.Alive',
    index=0,
    containing_service=None,
    input_type=_CHECK,
    output_type=_ACK,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='Enqueue',
    full_name='official.recommendation.data_server.TrainData.Enqueue',
    index=1,
    containing_service=None,
    input_type=_NUMEPOCHS,
    output_type=_ACK,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetBatch',
    full_name='official.recommendation.data_server.TrainData.GetBatch',
    index=2,
    containing_service=None,
    input_type=_BATCHREQUEST,
    output_type=_BATCH,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='ShutdownServer',
    full_name='official.recommendation.data_server.TrainData.ShutdownServer',
    index=3,
    containing_service=None,
    input_type=_SHUTDOWN,
    output_type=_ACK,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_TRAINDATA)

DESCRIPTOR.services_by_name['TrainData'] = _TRAINDATA

# @@protoc_insertion_point(module_scope)
